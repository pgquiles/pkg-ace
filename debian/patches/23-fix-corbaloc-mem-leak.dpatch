#! /bin/sh /usr/share/dpatch/dpatch-run
## 23-fix-corbaloc-mem-leak.dpatch by Thomas Girard <thomas.g.girard@free.fr>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix mem leak in corbaloc: url parsing.

@DPATCH@
Mon Feb 28 13:29:36 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/CORBALOC_Parser.cpp:
        * tao/CORBALOC_Parser.h:
        * tao/CORBALOC_Parser.i:

          Fixed a memory leak resulting from incorrect reference count
          management in the corbaloc parser. The bad code was using
          mprofile::add_profile to assign the profile, then releasing its
          reference without decrementing the count. Since add_profile
          increments, this caused the failure. Replacing add_profile with
          give_profile is the best fix, since give_profile is what we
          really want to do.

          Changes in CORBALOC_Parser.[h,i] move inlined ctor/dtor code out
          of the header proper and into the inline file. The dtor also
          does the right thing of explicitly decrementing the reference
          count of any profile not given away to the mprofile.
===================================================================
RCS file: /project/www/cgi-bin/cvsweb-1.80/cvs-repository/ACE_wrappers/TAO/tao/CORBALOC_Parser.cpp,v
retrieving revision 1.47
retrieving revision 1.48
diff -u -r1.47 -r1.48
--- ACE_wrappers/TAO/tao/CORBALOC_Parser.cpp	2004/09/24 14:39:45	1.47
+++ ACE_wrappers/TAO/tao/CORBALOC_Parser.cpp	2005/02/28 19:30:26	1.48
@@ -8,7 +8,6 @@
 #include "tao/debug.h"
 #include "ace/Vector_T.h"
 #include "ace/INET_Addr.h"
-#include "ace/os_include/os_netdb.h"
 
 #if !defined(__ACE_INLINE__)
 #include "CORBALOC_Parser.i"
@@ -16,7 +15,7 @@
 
 ACE_RCSID (TAO,
            CORBALOC_Parser,
-           "CORBALOC_Parser.cpp,v 1.47 2004/09/24 14:39:45 parsons Exp")
+           "CORBALOC_Parser.cpp,v 1.48 2005/02/28 19:30:26 mesnier_p Exp")
 
 TAO_CORBALOC_Parser::~TAO_CORBALOC_Parser (void)
 {
@@ -169,8 +168,9 @@
       {
         if (TAO_debug_level)
           ACE_ERROR ((LM_ERROR,
-                      "(%P|%t) TAO_CORBALOC_Parser::parse_string "
-                      "could not parse from %s",ior));
+                      ACE_TEXT("(%P|%t) TAO_CORBALOC_Parser::parse_string ")
+                      ACE_TEXT("could not parse from %s"),
+                      ACE_TEXT_CHAR_TO_TCHAR(ior)));
         ACE_THROW_RETURN (CORBA::BAD_PARAM (CORBA::OMGVMCID | 10,
                                             CORBA::COMPLETED_NO),
                           CORBA::Object::_nil ());
@@ -195,8 +195,9 @@
     // anything else is a violation.
     if (TAO_debug_level)
       ACE_ERROR ((LM_ERROR,
-                  "(%P|%t) TAO_CORBALOC_Parser::parse_string "
-                  "could not parse from %s",ior));
+                  ACE_TEXT("(%P|%t) TAO_CORBALOC_Parser::parse_string ")
+                  ACE_TEXT("could not parse from %s"),
+                  ACE_TEXT_CHAR_TO_TCHAR(ior)));
     ACE_THROW_RETURN (CORBA::BAD_PARAM (CORBA::OMGVMCID | 10,
                                         CORBA::COMPLETED_NO),
                       CORBA::Object::_nil ());
@@ -215,10 +216,25 @@
         endpoints[i].obj_key_sep_ +
         obj_key;
       const char * str = full_ep.c_str();
-      endpoints[i].profile_->parse_string (str
-                                                  ACE_ENV_ARG_PARAMETER);
-      if (mprofile.add_profile(endpoints[i].profile_) != -1)
+      endpoints[i].profile_->parse_string (str ACE_ENV_ARG_PARAMETER);
+      if (mprofile.give_profile(endpoints[i].profile_) != -1)
         endpoints[i].profile_ = 0;
+      else
+        {
+          // Although this ought never happen, we want to make some
+          // indication back to the caller, more as an audit trail than
+          // anything else. The only failure possible is that there was
+          // insufficient heap to allocate the mprofile, hence the
+          // mprofile's size is 0, and give_profile fails.
+          if (TAO_debug_level)
+            ACE_ERROR ((LM_ERROR,
+                        ACE_TEXT("(%P|%t) TAO_CORBALOC_Parser::parse_string ")
+                        ACE_TEXT("mprofile.give_profile failed for i = %d\n"),
+                        i));
+          ACE_THROW_RETURN (CORBA::BAD_PARAM (CORBA::OMGVMCID | 10,
+                                              CORBA::COMPLETED_NO),
+                            CORBA::Object::_nil ());
+        }
     }
 
   CORBA::Object_ptr object = CORBA::Object::_nil ();
@@ -299,7 +315,7 @@
 
           ACE_THROW (CORBA::INV_OBJREF
                      (CORBA::SystemException::_tao_minor_code
-                      (0, EINVAL),
+                      (TAO_DEFAULT_MINOR_CODE, EINVAL),
                       CORBA::COMPLETED_NO));
         }
       else
===================================================================
RCS file: /project/www/cgi-bin/cvsweb-1.80/cvs-repository/ACE_wrappers/TAO/tao/CORBALOC_Parser.h,v
retrieving revision 1.17
retrieving revision 1.18
diff -u -r1.17 -r1.18
--- ACE_wrappers/TAO/tao/CORBALOC_Parser.h	2005/01/30 08:00:14	1.17
+++ ACE_wrappers/TAO/tao/CORBALOC_Parser.h	2005/02/28 19:30:26	1.18
@@ -4,7 +4,7 @@
 /**
  *  @file   CORBALOC_Parser.h
  *
- *  CORBALOC_Parser.h,v 1.17 2005/01/30 08:00:14 ossama Exp
+ *  CORBALOC_Parser.h,v 1.18 2005/02/28 19:30:26 mesnier_p Exp
  *
  *  @author Carlos O'Ryan (coryan@cs.wustl.edu)
  *  @author Priyanka Gontla (pgontla@uci.edu)
@@ -14,7 +14,7 @@
 
 #ifndef TAO_CORBALOC_PARSER_H
 #define TAO_CORBALOC_PARSER_H
-#include /**/ "ace/pre.h"
+#include "ace/pre.h"
 
 #include "tao/IOR_Parser.h"
 
@@ -22,13 +22,14 @@
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "tao/Profile.h"
 #include "ace/Service_Config.h"
 #include "ace/Array.h"
+#include "tao/Profile.h"
 #include "ace/SString.h"
 
 class TAO_MProfile;
 
+
 /**
  * @class TAO_CORBALOC_Parser
  *
@@ -83,8 +84,8 @@
     ACE_THROW_SPEC ((CORBA::SystemException));
 
   struct parsed_endpoint {
-    parsed_endpoint () : profile_ (0) {}
-    ~parsed_endpoint () { delete this->profile_; }
+    parsed_endpoint ();
+    ~parsed_endpoint ();
     TAO_Profile *profile_;
     char obj_key_sep_;
     ACE_CString prot_addr_;
@@ -98,5 +99,5 @@
 ACE_STATIC_SVC_DECLARE_EXPORT (TAO, TAO_CORBALOC_Parser)
 ACE_FACTORY_DECLARE (TAO, TAO_CORBALOC_Parser)
 
-#include /**/ "ace/post.h"
+#include "ace/post.h"
 #endif /* TAO_CORBALOC_PARSER_H */
===================================================================
RCS file: /project/www/cgi-bin/cvsweb-1.80/cvs-repository/ACE_wrappers/TAO/tao/CORBALOC_Parser.i,v
retrieving revision 1.1
retrieving revision 1.2
diff -u -r1.1 -r1.2
--- ACE_wrappers/TAO/tao/CORBALOC_Parser.i	2000/10/02 22:47:58	1.1
+++ ACE_wrappers/TAO/tao/CORBALOC_Parser.i	2005/02/28 19:30:26	1.2
@@ -1,6 +1,20 @@
-// CORBALOC_Parser.i,v 1.1 2000/10/02 22:47:58 doccvs Exp
+// -*- C++ -*-
+// CORBALOC_Parser.i,v 1.2 2005/02/28 19:30:26 mesnier_p Exp
 
 ACE_INLINE
 TAO_CORBALOC_Parser::TAO_CORBALOC_Parser (void)
 {
 }
+
+ACE_INLINE
+TAO_CORBALOC_Parser::parsed_endpoint::parsed_endpoint(void)
+ : profile_ (0)
+{
+}
+
+ACE_INLINE
+TAO_CORBALOC_Parser::parsed_endpoint::~parsed_endpoint (void)
+{
+  if (this->profile_ != 0)
+    this->profile_->_decr_refcnt();
+}
