#! /bin/sh /usr/share/dpatch/dpatch-run
## 31-gcc-4.1-fix.dpatch by Thomas Girard <thomas.g.girard@free.fr>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Backport `Sat Mar 11 09:09:35 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>'
## DP: Fix "dereferencing 4.1 type-punned pointers" gcc 4.1 warning.

@DPATCH@

--- ACE_wrappers/ace/CDR_Stream.inl-
+++ ACE_wrappers/ace/CDR_Stream.inl
@@ -165,7 +165,6 @@
       ACE_Message_Block::release (cont);
       this->start_.cont (0);
     }
-
 }
 
 // Encode the CDR stream.
@@ -173,7 +174,8 @@
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_octet (ACE_CDR::Octet x)
 {
-  return this->write_1 (reinterpret_cast<const ACE_CDR::Octet *> (&x));
+  const void *temp = &x;
+  return this->write_1 (reinterpret_cast<const ACE_CDR::Octet *> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
@@ -186,62 +186,74 @@
 ACE_OutputCDR::write_char (ACE_CDR::Char x)
 {
   if (this->char_translator_ == 0)
-    return this->write_1 (reinterpret_cast<const ACE_CDR::Octet*> (&x));
+    {
+      const void *temp = &x;
+      return this->write_1 (reinterpret_cast<const ACE_CDR::Octet*> (temp));
+    }
   return this->char_translator_->write_char (*this, x);
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_short (ACE_CDR::Short x)
 {
-  return this->write_2 (reinterpret_cast<const ACE_CDR::UShort*> (&x));
+  const void *temp = &x;
+  return this->write_2 (reinterpret_cast<const ACE_CDR::UShort*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_ushort (ACE_CDR::UShort x)
 {
-  return this->write_2 (reinterpret_cast<const ACE_CDR::UShort*> (&x));
+  const void *temp = &x;
+  return this->write_2 (reinterpret_cast<const ACE_CDR::UShort*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_long (ACE_CDR::Long x)
 {
-  return this->write_4 (reinterpret_cast<const ACE_CDR::ULong*> (&x));
+  const void *temp = &x;
+  return this->write_4 (reinterpret_cast<const ACE_CDR::ULong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_ulong (ACE_CDR::ULong x)
 {
-  return this->write_4 (reinterpret_cast<const ACE_CDR::ULong*> (&x));
+  const void *temp = &x;
+  return this->write_4 (reinterpret_cast<const ACE_CDR::ULong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_longlong (const ACE_CDR::LongLong &x)
 {
-  return this->write_8 (reinterpret_cast<const ACE_CDR::ULongLong*> (&x));
+  const void *temp = &x;
+  return this->write_8 (reinterpret_cast<const ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_ulonglong (const ACE_CDR::ULongLong &x)
 {
-  return this->write_8 (reinterpret_cast<const ACE_CDR::ULongLong*> (&x));
+  const void *temp = &x;
+  return this->write_8 (reinterpret_cast<const ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_float (ACE_CDR::Float x)
 {
-  return this->write_4 (reinterpret_cast<const ACE_CDR::ULong*> (&x));
+  const void *temp = &x;
+  return this->write_4 (reinterpret_cast<const ACE_CDR::ULong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_double (const ACE_CDR::Double &x)
 {
-  return this->write_8 (reinterpret_cast<const ACE_CDR::ULongLong*> (&x));
+  const void *temp = &x;
+  return this->write_8 (reinterpret_cast<const ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_OutputCDR::write_longdouble (const ACE_CDR::LongDouble &x)
 {
-  return this->write_16 (reinterpret_cast<const ACE_CDR::LongDouble*> (&x));
+  const void *temp = &x;
+  return this->write_16 (reinterpret_cast<const ACE_CDR::LongDouble*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
@@ -578,7 +590,10 @@
 ACE_InputCDR::read_char (ACE_CDR::Char &x)
 {
   if (this->char_translator_ == 0)
-    return this->read_1 (reinterpret_cast<ACE_CDR::Octet*> (&x));
+    {
+      void *temp = &x;
+      return this->read_1 (reinterpret_cast<ACE_CDR::Octet*> (temp));
+    }
   return this->char_translator_->read_char (*this, x);
 }
 
@@ -586,58 +601,67 @@
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_short (ACE_CDR::Short &x)
 {
-  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (&x));
+  void *temp = &x;
+  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_ushort (ACE_CDR::UShort &x)
 {
-  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (&x));
+  void *temp = &x;
+  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (temp));
 }
 
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_long (ACE_CDR::Long &x)
 {
-  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (&x));
+  void *temp = &x;
+  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (temp));
 }
 
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_ulong (ACE_CDR::ULong &x)
 {
-  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (&x));
+  void *temp = &x;
+  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (temp));
 }
 
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_longlong (ACE_CDR::LongLong &x)
 {
-  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (&x));
+  void *temp = &x;
+  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_ulonglong (ACE_CDR::ULongLong &x)
 {
-  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (&x));
+  void *temp = &x;
+  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_float (ACE_CDR::Float &x)
 {
-  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (&x));
+  void *temp = &x;
+  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_double (ACE_CDR::Double &x)
 {
-  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (&x));
+  void *temp = &x;
+  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::read_longdouble (ACE_CDR::LongDouble &x)
 {
-  return this->read_16 (reinterpret_cast<ACE_CDR::LongDouble*> (&x));
+  void *temp = &x;
+  return this->read_16 (reinterpret_cast<ACE_CDR::LongDouble*> (temp));
 }
 
 ACE_INLINE size_t
@@ -874,7 +898,8 @@
 ACE_InputCDR::skip_char (void)
 {
   ACE_CDR::Char x;
-  return this->read_1 (reinterpret_cast<ACE_CDR::Octet*> (&x));
+  void *temp = &x;
+  return this->read_1 (reinterpret_cast<ACE_CDR::Octet*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
@@ -896,42 +921,48 @@
 ACE_InputCDR::skip_short (void)
 {
   ACE_CDR::Short x;
-  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (&x));
+  void *temp = &x;
+  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::skip_ushort (void)
 {
   ACE_CDR::UShort x;
-  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (&x));
+  void *temp = &x;
+  return this->read_2 (reinterpret_cast<ACE_CDR::UShort*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::skip_long (void)
 {
   ACE_CDR::Long x;
-  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (&x));
+  void *temp = &x;
+  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::skip_ulong (void)
 {
   ACE_CDR::ULong x;
-  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (&x));
+  void *temp = &x;
+  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::skip_longlong (void)
 {
   ACE_CDR::LongLong x;
-  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (&x));
+  void *temp = &x;
+  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::skip_ulonglong (void)
 {
   ACE_CDR::ULongLong x;
-  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (&x));
+  void *temp = &x;
+  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
@@ -940,21 +971,24 @@
   // Changing this removes the warning for GHS and it
   // stops the compiler from getting an internal error.
   ACE_CDR::ULong value;
-  return this->read_4 (&value);
+  void *temp = &value;
+  return this->read_4 (reinterpret_cast<ACE_CDR::ULong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::skip_double (void)
 {
   double x;
-  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (&x));
+  void *temp = &x;
+  return this->read_8 (reinterpret_cast<ACE_CDR::ULongLong*> (temp));
 }
 
 ACE_INLINE ACE_CDR::Boolean
 ACE_InputCDR::skip_longdouble (void)
 {
   ACE_CDR::LongDouble x;
-  return this->read_16 (reinterpret_cast<ACE_CDR::LongDouble*> (&x));
+  void *temp = &x;
+  return this->read_16 (reinterpret_cast<ACE_CDR::LongDouble*> (temp));
 }
 
 ACE_INLINE char*
