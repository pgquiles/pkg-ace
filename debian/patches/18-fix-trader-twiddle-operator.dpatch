#! /bin/sh /usr/share/dpatch/dpatch-run
## 18-fix-trader-twiddle-operator.dpatch by Thomas Girard <thomas.g.girard@free.fr>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Trader interprets ~ constraint operator incorrectly. 
## DP: See ChangeLog entry
## DP:  "Fri Oct 29 17:03:46 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>"

@DPATCH@
--- ACE_wrappers.org/TAO/orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp	2003/10/28 18:34:24	1.36
+++ ACE_wrappers/TAO/orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp	2004/10/29 17:09:04	1.37
@@ -1,4 +1,4 @@
-// Constraint_Visitors.cpp,v 1.36 2003/10/28 18:34:24 bala Exp
+// Constraint_Visitors.cpp,v 1.37 2004/10/29 17:09:04 bala Exp
 
 #include "Constraint_Visitors.h"
 #include "Constraint_Nodes.h"
@@ -6,7 +6,7 @@
 
 #include "tao/DynamicAny/DynSequence_i.h"
 
-ACE_RCSID(Trader, Constraint_Visitors, "Constraint_Visitors.cpp,v 1.36 2003/10/28 18:34:24 bala Exp")
+ACE_RCSID(Trader, Constraint_Visitors, "Constraint_Visitors.cpp,v 1.37 2004/10/29 17:09:04 bala Exp")
 
 TAO_Constraint_Evaluator::Operand_Queue::Operand_Queue (void)
 {
@@ -357,7 +357,7 @@
   TAO_Constraint* left = binary_twiddle->left_operand (),
     *right = binary_twiddle->right_operand ();
 
-  // Determine if the left operand is a subTAO_String_Hash_Key of the right.
+  // Determine if the left operand is a substring of the right.
 
   if (left->accept (this) == 0)
     {
@@ -367,8 +367,8 @@
           TAO_Literal_Constraint& right_operand = this->queue_.get_right_operand ();
 
           CORBA::Boolean result = (CORBA::Boolean)
-            (ACE_OS::strstr ((const char*)left_operand,
-                             (const char*)right_operand) != 0);
+            (ACE_OS::strstr ((const char*)right_operand,
+                             (const char*)left_operand) != 0);
 
           this->queue_.dequeue_operand ();
           this->queue_.dequeue_operand ();
