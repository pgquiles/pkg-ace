Source: ace
Section: devel
Priority: optional
Maintainer: Debian ACE+TAO maintainers <pkg-ace-devel@lists.alioth.debian.org>
Uploaders: Konstantinos Margaritis <markos@debian.org>, Brian Nelson <pyro@debian.org>, Thomas Girard <thomas.g.girard@free.fr>
Build-Depends: debhelper (>= 4.1), libssl-dev (>= 0.9.7d), dpatch (>= 2.0.10), libxt-dev (>= 4.3.0), libfltk1.1-dev (>= 1.1.4), libqt3-mt-dev (>= 3:3.3.3), tk8.4-dev (>= 8.4.7), docbook-to-man, libxerces26-dev, bzip2
Standards-Version: 3.6.2

Package: libace5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libace5.2, libace5.4 (<< 5.4.7), libace5.4.7
Conflicts: libace5.2, libace5.4 (<< 5.4.7), libace5.4.7
Description: C++ network programming framework
 This package contains the ADAPTIVE Communication Environment (ACE)
 framework.
 .
 It provides platform independent C++ wrappers for interprocess
 communication:
  * signals
  * pipes
  * sockets
  * message queues
  * semaphores
  * shared memory
 as well as thread, process management routines and much more.
 .
 Moreover, it defines patterns for common communication tasks.  Beyond
 these:
  * Reactor, to handle event demultiplexing and dispatching
  * Proactor, for asynchronous I/O driven programs
 .
 Along with the ACE core library, this package contains a wrapper library
 for OpenSSL.
 .
  Homepage: http://www.cs.wustl.edu/~schmidt/ACE.html

Package: libace-dev
Architecture: any
Section: libdevel
Depends: libace5.4.7c2a (= ${Source-Version}), libssl-dev (>= 0.9.7d)
Suggests: libace-doc, libtao-dev, pkg-config
Replaces: libace5.2-dev
Conflicts: libace5.2-dev
Description: C++ network programming framework development files
 This package contains the header files and static libraries for the
 ACE framework.

Package: libace-doc
Architecture: all
Section: doc
Suggests: libace-dev
Description: C++ network programming framework documentation
 This package contains the ACE overview documentation, tutorials,
 examples, and information regarding upstream development.

Package: mpc-ace
Architecture: all
Section: devel
Depends: ${perl:Depends}
Recommends: make
Suggests: libace-dev (= ${Source-Version}), pkg-config
Description: makefile, project and workspace creator
 This package contains the Makefile, Project and Workspace Creator (MPC)
 as distributed with the ACE toolkit.
 .
 MPC generates platform and compiler specific files to automate the
 compilation process.
 .
 The following programs are included:
  * mpc-ace, generating project files for a single target
  * mwc-ace, generating workspace files for a set of projects
 .
  Homepage: http://www.ociweb.com/products/MPC
 
Package: libace-rmcast5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libace-rmcast5.2, libace-rmcast5.4 (<< 5.4.7), libace-rmcast5.4.7
Conflicts: libace-rmcast5.2, libace-rmcast5.4 (<< 5.4.7), libace-rmcast5.4.7
Description: ACE reliable multicast library
 The RMCast library is a reliable source-ordered multicast protocol
 implementation.
 .
 It uses sequence number for re-ordering, duplicate suppression and
 loss detection of messages.

Package: libace-rmcast-dev
Architecture: any
Section: libdevel
Depends: libace-rmcast5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version})
Replaces: libace-rmcast5.2-dev
Description: ACE reliable multicast library development files
 This package contains the header files and static library for the ACE
 reliable multicast library.

Package: libace-tmcast5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libace-tmcast5.4.7
Conflicts: libace-tmcast5.4.7
Description: ACE transactional multicast library
 The TMCast library is a transaction multicast protocol implementation. 
 .
 Each message is delivered to multicast group members as a transaction: 
 an atomic, consistent and isolated action.

Package: libace-tmcast-dev
Architecture: any
Section: libdevel
Depends: libace-tmcast5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version})
Description: ACE transactional multicast library development files
 This package contains the header files and static library for the ACE
 transactional multicast library.

Package: libace-htbp5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Description: ACE protocol over HTTP tunneling library
 The HTTP Tunneling, Bidirectional, Protocol (HTBP) library enables
 the writing of stream-based protocols over HTTP.
 .
 This allows clients behind a firewall to establish a connection with
 outbound servers using the HTTP protocol.

Package: libace-htbp-dev
Architecture: any
Section: libdevel
Depends: libace-htbp5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version})
Description: ACE protocol over HTTP tunneling library development files
 This package contains the header files and static library for the ACE
 HTBP library.

Package: gperf-ace
Architecture: any
Section: devel
Depends: ${shlibs:Depends}
Description: ACE perfect hash function generator
 gperf-ace is the ACE version of gperf.
 .
 Both gperf-ace and gperf were written by the same author, and have
 basically the same options and functionality.  gperf-ace simply takes
 advantage of the some of the features provided by the ACE library.

Package: libacexml5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libacexml5.4 (<< 5.4.7), libacexml5.4.7
Conflicts: libacexml5.4 (<< 5.4.7), libacexml5.4.7
Description: ACE SAX-based XML parsing library
 This package provides interfaces for XML parsing based on Simple API
 for XML (SAX) 2.0, defined by David Megginson. This is an event-driven
 parsing approach.
 .
 ACEXML is a small footprint and portable library.  It does not validate
 XML documents and supports only Unicode encoding.

Package: libacexml-dev
Architecture: any
Section: libdevel
Depends: libacexml5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version})
Description: ACE SAX-based XML parsing library development files
 This package contains the header files and static library for the ACE
 XML parsing library.

Package: libkokyu5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libkokyu5.4 (<< 5.4.7), libkokyu5.4.7
Conflicts: libkokyu5.4 (<< 5.4.7), libkokyu5.4.7
Suggests: libtao1.4.7c2a, libtao-orbsvcs1.4.7c2a
Description: ACE scheduling and dispatching library
 Kokyu is a library designed to provide flexible scheduling and
 dispatching services within the context of higher-level middleware.
 .
 Currently it provides real-time scheduling and dispatching services
 for TAO's real-time CORBA Event Service.

Package: libkokyu-dev
Architecture: any
Section: libdevel
Depends: libkokyu5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version})
Suggests: libtao-orbsvcs-dev (= ${Source-Version})
Description: ACE scheduling and dispatching library development files
 This package contains the header files and static library for the ACE
 scheduling and dispatching library.

Package: libtao1.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libtao1.4 (<< 5.4.7), libtao1.4.7
Conflicts: libtao1.4 (<< 5.4.7), libtao1.4.7
Suggests: libtao-orbsvcs1.4.7c2a
Description: the ACE ORB
 This package contains the run-time TAO libraries.
 .
 TAO is a freely available, open-source implementation of a CORBA 
 2.x-compliant ORB that supports real-time extensions. 
 .
  Homepage: http://www.cs.wustl.edu/~schmidt/TAO.html

Package: libtao-dev
Architecture: any
Section: libdevel
Depends: libtao1.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version})
Suggests: libtao-doc, libtao-orbsvcs-dev (= ${Source-Version})
Description: Development files for TAO, The ACE ORB
 This package contains the header files for the TAO toolkit. Due to the
 size of the static libs (> 400MB) they have been left out.
 .
 TAO is a freely available, open-source implementation of a CORBA 
 2.x-compliant ORB that supports real-time extensions. 

Package: libtao-doc
Architecture: all
Section: doc
Suggests: libtao-dev (= ${Source-Version})
Description: Documentation for TAO, The ACE ORB
 This package contains the TAO overview documentation, tutorials,
 examples, and information regarding upstream development.

Package: libtao-orbsvcs1.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libtao-orbsvcs1.3.1, libtao-orbsvcs1.4 (<< 5.4.7), libtao-orbsvcs1.4.7
Conflicts: libtao-orbsvcs1.3.1, libtao-orbsvcs1.4 (<< 5.4.7), libtao-orbsvcs1.4.7
Description: TAO CORBA services
 This package contains the run-time TAO ORB services libraries.
 .
 This includes:
  * tao_ifr, the interface repository
  * Concurrency_Service
  * To be continued...

Package: libtao-orbsvcs-dev
Architecture: any
Section: libdevel
Depends: libtao-orbsvcs1.4.7c2a (= ${Source-Version}), libtao-dev (= ${Source-Version})
Description: TAO CORBA services development files
 This package contains the header files for the TAO CORBA services.
 Due to the size of the static libs (> 400MB) they have been left out.
 The examples and some documentation have been included as well.

Package: libace-qtreactor5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libace-qtreactor5.4 (<< 5.4.7), libace-qtreactor5.4.7
Conflicts: libace-qtreactor5.4 (<< 5.4.7), libace-qtreactor5.4.7
Description: GUI Integrated Reactors for ACE: Qt Reactor
 Recognizing the need to write reactor-based GUI applications, the ACE
 community has created several reactor extensions for use with X Window
 System.  Each of these extends the ACE_Select_Reactor to work with a
 specific toolkit.  By using these reactors, your GUI application can remain
 single threaded yet still respond to both GUI events, such as button
 presses, any your own application events.
 .
 The ACE_QtReactor extends both the ACE_Select_Reactor and the Trolltech Qt
 library's QObjects class.  Rather then using select(), the
 QtWaitForMultipleEvents() function is used.

Package: libace-qtreactor-dev
Architecture: any
Section: libdevel
Depends: libace-qtreactor5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version}), libqt3-mt-dev (>= 3:3.3.3)
Description: GUI Integrated Reactors for ACE: Qt Reactor (development files)
 Recognizing the need to write reactor-based GUI applications, the ACE
 community has created several reactor extensions for use with X Window
 System.  Each of these extends the ACE_Select_Reactor to work with a
 specific toolkit.  By using these reactors, your GUI application can remain
 single threaded yet still respond to both GUI events, such as button
 presses, any your own application events.
 .
 The ACE_QtReactor extends both the ACE_Select_Reactor and the Trolltech Qt
 library's QObjects class.  Rather then using select(), the
 QtWaitForMultipleEvents() function is used.
 .
 This packages contains development files.

Package: libace-xtreactor5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libace-xtreactor5.4 (<< 5.4.7), libace-xtreactor5.4.7
Conflicts: libace-xtreactor5.4 (<< 5.4.7), libace-xtreactor5.4.7
Description: GUI Integrated Reactors for ACE: Xt Reactor
 Recognizing the need to write reactor-based GUI applications, the ACE
 community has created several reactor extensions for use with X Window
 System.  Each of these extends the ACE_Select_Reactor to work with a
 specific toolkit.  By using these reactors, your GUI application can remain
 single threaded yet still respond to both GUI events, such as button presses,
 any your own application events.
 .
 The ACE_XtReactor extends both the ACE_Select_Reactor and the X Toolkit library
 function XtWaitForMultipleEvents().

Package: libace-xtreactor-dev
Architecture: any
Section: libdevel
Depends: libace-xtreactor5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version}), libxt-dev (>= 4.3.0)
Description: GUI Integrated Reactors for ACE: Xt Reactor (development files)
 Recognizing the need to write reactor-based GUI applications, the ACE
 community has created several reactor extensions for use with X Window
 System.  Each of these extends the ACE_Select_Reactor to work with a
 specific toolkit.  By using these reactors, your GUI application can remain
 single threaded yet still respond to both GUI events, such as button presses,
 any your own application events.
 .
 The ACE_XtReactor extends both the ACE_Select_Reactor and the X Toolkit library
 function XtWaitForMultipleEvents().
 .
 This packages contains development files.

Package: libace-tkreactor5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libace-tkreactor5.4 (<< 5.4.7), libace-tkreactor5.4.7
Conflicts: libace-tkreactor5.4 (<< 5.4.7), libace-tkreactor5.4.7
Description: GUI Integrated Reactors for ACE: Tk Reactor
 Recognizing the need to write reactor-based GUI applications, the ACE
 community has created several reactor extensions for use with X Window
 System.  Each of these extends the ACE_Select_Reactor to work with a
 specific toolkit.  By using these reactors, your GUI application can remain
 single threaded yet still respond to both GUI events, such as button presses,
 any your own application events.
 .
 The ACE_TkReactor provides reactor functionality around the popular Tcl/Tk
 library.  The underlying Tcl/Tk method used is Tcl_DoOneEvent().

Package: libace-tkreactor-dev
Architecture: any
Section: libdevel
Depends: libace-tkreactor5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version}), tk8.4-dev (>= 8.4.7)
Description: GUI Integrated Reactors for ACE: Tk Reactor (development files)
 Recognizing the need to write reactor-based GUI applications, the ACE
 community has created several reactor extensions for use with X Window
 System.  Each of these extends the ACE_Select_Reactor to work with a
 specific toolkit.  By using these reactors, your GUI application can remain
 single threaded yet still respond to both GUI events, such as button presses,
 any your own application events.
 .
 The ACE_TkReactor provides reactor functionality around the popular Tcl/Tk
 library.  The underlying Tcl/Tk method used is Tcl_DoOneEvent().
 .
 This package contains development files.

Package: libace-flreactor5.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libace-flreactor5.4 (<< 5.4.7), libace-flreactor5.4.7
Conflicts: libace-flreactor5.4 (<< 5.4.7), libace-flreactor5.4.7
Description: GUI Integrated Reactors for ACE: FastLight Reactor
 Recognizing the need to write reactor-based GUI applications, the ACE
 community has created several reactor extensions for use with X Window
 System.  Each of these extends the ACE_Select_Reactor to work with a
 specific toolkit.  By using these reactors, your GUI application can remain
 single threaded yet still respond to both GUI events, such as button presses,
 any your own application events.
 .
 The ACE_FlReactor integrates with the FastLight toolkit's Fl::wait() method.

Package: libace-flreactor-dev
Architecture: any
Section: libdevel
Depends: libace-flreactor5.4.7c2a (= ${Source-Version}), libace-dev (= ${Source-Version}), libfltk1.1-dev (>= 1.1.4)
Description: GUI Integrated Reactors for ACE: FastLight Reactor (development files)
 Recognizing the need to write reactor-based GUI applications, the ACE
 community has created several reactor extensions for use with X Window
 System.  Each of these extends the ACE_Select_Reactor to work with a
 specific toolkit.  By using these reactors, your GUI application can remain
 single threaded yet still respond to both GUI events, such as button presses,
 any your own application events.
 .
 This package contains development files.

Package: libtao-qtresource1.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libtao-qtreactor1.4 (<< 5.4.7), libtao-qtresource1.4.7
Conflicts: libtao-qtreactor1.4 (<< 5.4.7), libtao-qtresource1.4.7
Description: Qt GUI resource factory for TAO
 This factory is intended for creating QtReactor for ORB. This factory
 can be feed into ORB using TAO_ORB_Core::set_gui_resource_factory
 method which is usually done by TAO_QtResource_Loader.

Package: libtao-qtresource-dev
Architecture: any
Section: libdevel
Depends: libtao-qtresource1.4.7c2a (= ${Source-Version}), libace-qtreactor-dev (= ${Source-Version}), libtao-dev (= ${Source-Version})
Replaces: libtao-qtreactor-dev (<< 5.4.7)
Conflicts: libtao-qtreactor-dev (<< 5.4.7)
Description: Qt GUI resource factory for TAO (development files)
 This factory is intended for creating QtReactor for ORB. This factory
 can be feed into ORB using TAO_ORB_Core::set_gui_resource_factory
 method which is usually done by TAO_QtResource_Loader.
 .
 This package contains development files.

Package: libtao-xtresource1.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libtao-xtreactor1.4 (<< 5.4.7), libtao-xtresource1.4.7
Conflicts: libtao-xtreactor1.4 (<< 5.4.7), libtao-xtresource1.4.7
Description: Xt GUI resource factory for TAO
 This factory is intended for creating XtReactor for ORB. This factory
 can be feed into ORB using TAO_ORB_Core::set_gui_resource_factory
 method which is usually done by TAO_XtResource_Loader.

Package: libtao-xtresource-dev
Architecture: any
Section: libdevel
Depends: libtao-xtresource1.4.7c2a (= ${Source-Version}), libace-xtreactor-dev (= ${Source-Version}), libtao-dev (= ${Source-Version})
Replaces: libtao-xtreactor-dev (<< 5.4.7)
Conflicts: libtao-xtreactor-dev (<< 5.4.7)
Description: Xt GUI resource factory for TAO (development files)
 This factory is intended for creating XtReactor for ORB. This factory
 can be feed into ORB using TAO_ORB_Core::set_gui_resource_factory
 method which is usually done by TAO_XtResource_Loader.
 .
 This package contains development files.

Package: libtao-flresource1.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libtao-flresource1.4.7
Conflicts: libtao-flresource1.4.7
Description: Fl GUI resource factory for TAO
 This factory is intended for creating FlReactor for ORB. This factory
 can be feed into ORB using TAO_ORB_Core::set_gui_resource_factory
 method which is usually done by TAO_FlResource_Loader.

Package: libtao-flresource-dev
Architecture: any
Section: libdevel
Depends: libtao-flresource1.4.7c2a (= ${Source-Version}), libace-flreactor-dev (= ${Source-Version}), libtao-dev (= ${Source-Version})
Description: Fl GUI resource factory for TAO (development files)
 This factory is intended for creating FlReactor for ORB. This factory
 can be feed into ORB using TAO_ORB_Core::set_gui_resource_factory
 method which is usually done by TAO_FlResource_Loader.
 .
 This package contains development files.

Package: libtao-tkresource1.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libtao-tkresource1.4.7
Conflicts: libtao-tkresource1.4.7
Description: Tk GUI resource factory for TAO
 This factory is intended for creating FlReactor for ORB. This factory
 can be feed into ORB using TAO_ORB_Core::set_gui_resource_factory
 method which is usually done by TAO_TkResource_Loader.

Package: libtao-tkresource-dev
Architecture: any
Section: libdevel
Depends: libtao-tkresource1.4.7c2a (= ${Source-Version}), libace-tkreactor-dev (= ${Source-Version}), libtao-dev (= ${Source-Version})
Description: Tk GUI resource factory for TAO (development files)
 This factory is intended for creating TkReactor for ORB. This factory
 can be feed into ORB using TAO_ORB_Core::set_gui_resource_factory
 method which is usually done by TAO_TkResource_Loader.
 .
 This package contains development files.

Package: libciao0.4.7c2a
Architecture: any
Section: libs
Depends: ${shlibs:Depends}
Replaces: libciao1.4 (<< 5.4.7), libciao0.4.7
Conflicts: libciao1.4 (<< 5.4.7), libciao0.4.7
Description: TAO's implementation of CORBA Component Model
 This package contains the run-time CIAO libraries.
 .
 CIAO is TAO's implementation of CORBA Component Model (CCM) specially
 optimized for distributed real-time embedded (DRE) systems.

Package: libciao-dev
Architecture: any
Section: libdevel
Depends: libciao0.4.7c2a (= ${Source-Version}), libtao-orbsvcs-dev (= ${Source-Version})
Suggests: libciao-doc
Description: CIAO development files
 This package contains the header files for CIAO.
 .
 CIAO is TAO's implementation of CORBA Component Model (CCM) specially
 optimized for distributed real-time embedded (DRE) systems.

Package: libciao-doc
Architecture: all
Section: doc
Suggests: libciao-dev
Conflicts: libciao-dev (<< 5.4.7-9)
Description: Documentation for CIAO, a CORBA Component Model middleware
 This package contains the CIAO documentation, tutorials and examples.
 .
 CIAO is TAO's implementation of CORBA Component Model (CCM) specially
 optimized for distributed real-time embedded (DRE) systems.
